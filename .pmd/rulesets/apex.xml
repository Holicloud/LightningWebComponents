<?xml version="1.0" encoding="UTF-8" ?>
<ruleset
  xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  name="default ruleset"
  xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd"
>
    <description>default ruleset</description>
    <exclude-pattern>.*/.sfdx/.*</exclude-pattern>

    <!-- Apex Best Practices -->
    <rule
    ref="category/apex/bestpractices.xml/ApexAssertionsShouldIncludeMessage"
    message="Adding messages to Assert methods improves readability and debugging."
  >
        <priority>5</priority>
    </rule>
    <rule
    ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts"
    message="Apex unit test classes should have at least one System.assert() or assertEquals() or AssertNotEquals() call"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveRunAs"
    message="Apex test classes should include at least one runAs method for testing security and sharing."
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/bestpractices.xml/ApexUnitTestMethodShouldHaveIsTestAnnotation"
    message="testMethod keyword is deprecated, and @isTest annotation should be used instead."
  >
        <priority>5</priority>
    </rule>
    <rule
    ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue"
    message="@isTest(seeAllData=true) should not be used in Apex unit tests because it opens up the existing database data for unexpected modification by tests"
  >
        <priority>1</priority>
    </rule>
    <rule
    ref="category/apex/bestpractices.xml/AvoidGlobalModifier"
    message="Avoid using global modifier"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/bestpractices.xml/AvoidLogicInTrigger"
    message="Avoid logic in triggers"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/bestpractices.xml/DebugsShouldUseLoggingLevel"
    message="On System.debug, use a LoggingLevel. Example: System.debug(LoggingLevel.WARN, 'Debug message here.');"
  >
        <priority>5</priority>
    </rule>
    <rule
    ref="category/apex/bestpractices.xml/UnusedLocalVariable"
    message="Do not declare local variables that are not used."
  >
        <priority>3</priority>
    </rule>

    <!-- Apex Code Style -->
    <rule
    ref="category/apex/codestyle.xml/ClassNamingConventions"
    message="Class names should begin with an uppercase character"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/codestyle.xml/FieldDeclarationsShouldBeAtStart"
    message="Field declarations should appear before method declarations within a class"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/codestyle.xml/FieldNamingConventions"
    message="Class variables should follow the correct naming convention according to modifiers."
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/codestyle.xml/ForLoopsMustUseBraces"
    message="Avoid using 'for' statements without curly braces"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/codestyle.xml/FormalParameterNamingConventions"
    message="Method parameters should be written in camelCase"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/codestyle.xml/IfElseStmtsMustUseBraces"
    message="Avoid using 'if...else' statements without curly braces"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/codestyle.xml/IfStmtsMustUseBraces"
    message="Avoid using if statements without curly braces"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/codestyle.xml/LocalVariableNamingConventions"
    message="Local variables should follow the correct naming convention according to modifiers."
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/codestyle.xml/MethodNamingConventions"
    message="Method name does not begin with a lower case character."
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/codestyle.xml/OneDeclarationPerLine"
    message="Declare a single variable per line to help readability"
  >
        <priority>3</priority>
        <properties>
            <property name="strictMode" value="true" />
        </properties>
    </rule>
    <rule
    ref="category/apex/codestyle.xml/PropertyNamingConventions"
    message="Properties should be named using camelCase"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/codestyle.xml/WhileLoopsMustUseBraces"
    message="Avoid using 'while' statements without curly braces"
  >
        <priority>3</priority>
    </rule>

    <!-- Apex Design -->
    <rule
    ref="category/apex/design.xml/AvoidDeeplyNestedIfStmts"
    message="Deeply nested if..else statements are hard to read"
  >
        <priority>3</priority>
        <properties>
            <property name="problemDepth" value="4" />
        </properties>
    </rule>
    <rule
    ref="category/apex/design.xml/CognitiveComplexity"
    message="Highly complex methods hurt readability and maintainability, and should be broken up."
  >
        <priority>3</priority>
        <properties>
            <property name="classReportLevel" value="50" />
            <property name="methodReportLevel" value="15" />
        </properties>
    </rule>
    <rule
    ref="category/apex/design.xml/CyclomaticComplexity"
    message="Methods with too many decision points are hard to read and maintain, and should be broken up."
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/design.xml/ExcessiveClassLength"
    message="Avoid really long classes (lines of code)"
  >
        <priority>3</priority>
        <properties>
            <property name="minimum" value="1000" />
        </properties>
    </rule>
    <rule
    ref="category/apex/design.xml/ExcessiveParameterList"
    message="Avoid long parameter lists"
  >
        <priority>3</priority>
        <properties>
            <property name="minimum" value="4" />
        </properties>
    </rule>
    <rule
    ref="category/apex/design.xml/ExcessivePublicCount"
    message="This class has too many public methods and attributes"
  >
        <priority>3</priority>
        <properties>
            <property name="minimum" value="25" />
        </properties>
    </rule>
    <rule
    ref="category/apex/design.xml/NcssConstructorCount"
    message="The constructor has an NCSS line count of {0}"
  >
        <priority>3</priority>
        <properties>
            <property name="minimum" value="20" />
        </properties>
    </rule>
    <rule
    ref="category/apex/design.xml/NcssMethodCount"
    message="The method {0}() has an NCSS line count of {1}"
  >
        <priority>3</priority>
        <properties>
            <property name="minimum" value="60" />
        </properties>
    </rule>
    <rule
    ref="category/apex/design.xml/NcssTypeCount"
    message="The type has an NCSS line count of {0}"
  >
        <priority>3</priority>
        <properties>
            <property name="minimum" value="700" />
        </properties>
    </rule>
    <rule
    ref="category/apex/design.xml/StdCyclomaticComplexity"
    message="Methods with too many decision points are hard to read and maintain, and should be broken up."
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/design.xml/TooManyFields"
    message="Too many fields"
  >
        <priority>3</priority>
        <properties>
            <property name="maxfields" value="20" />
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/UnusedMethod">
        <priority>2</priority>
    </rule>

    <!-- Apex Documentation -->
    <rule
    ref="category/apex/documentation.xml/ApexDoc"
    message="Classes, methods and properties should be properly documented using correct format."
  >
        <priority>3</priority>
    </rule>

    <!-- Apex Error Prone -->
    <rule
    ref="category/apex/errorprone.xml/ApexCSRF"
    message="Avoid making DML operations in Apex class constructor/init method"
  >
        <priority>1</priority>
    </rule>
    <rule
    ref="category/apex/errorprone.xml/AvoidDirectAccessTriggerMap"
    message="Avoid directly accessing Trigger.old and Trigger.new"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/errorprone.xml/AvoidHardcodingId"
    message="Avoid hardcoding ID's"
  >
        <priority>1</priority>
    </rule>
    <rule
    ref="category/apex/errorprone.xml/AvoidNonExistentAnnotations"
    message="Don't use non-supported annotations"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/errorprone.xml/EmptyCatchBlock"
    message="Avoid empty catch blocks"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/errorprone.xml/EmptyIfStmt"
    message="Avoid empty 'if' statements"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/errorprone.xml/EmptyStatementBlock"
    message="Avoid empty block statements."
  >
        <priority>3</priority>
        <properties>
            <property name="reportEmptyVirtualMethod" value="false" />
        </properties>
    </rule>
    <rule
    ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock"
    message="Avoid empty try or finally blocks"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/errorprone.xml/EmptyWhileStmt"
    message="Avoid empty 'while' statements"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/errorprone.xml/InaccessibleAuraEnabledGetter"
    message="Private and Protected @AuraEnabled properties are inaccessible from Aura and LWC"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass"
    message="Classes should not have non-constructor methods with the same name as the class"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/errorprone.xml/OverrideBothEqualsAndHashcode"
    message="Override both public Boolean equals(Object obj) and public Integer hashCode(), or override neither."
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/errorprone.xml/TestMethodsMustBeInTestClasses"
    message="Test methods should be in a class anotated as @isTest"
  >
        <priority>3</priority>
    </rule>

    <!-- Apex Performance -->
    <rule
    ref="category/apex/performance.xml/AvoidDebugStatements"
    message="Avoid debug statements and consider other debugging techniques"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/performance.xml/EagerlyLoadedDescribeSObjectResult"
    message="Include options parameter when loading DescribeSObjectResults to avoid loading unnecessary child relationships."
  >
        <priority>3</priority>
    </rule>

    <rule
    ref="category/apex/performance.xml/OperationWithHighCostInLoop"
    message="Method calls inside loops that are known to be likely a performance issue."
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/performance.xml/OperationWithLimitsInLoop"
    message="Avoid operations inside loops that could hit governor limits"
  >
        <priority>1</priority>
    </rule>

    <!-- Apex Security -->
    <rule
    ref="category/apex/security.xml/ApexBadCrypto"
    message="Apex Crypto should use random IV/key"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/security.xml/ApexCRUDViolation"
    message="Validate CRUD permission before SOQL/DML operation"
  >
        <priority>1</priority>
    </rule>
    <rule
    ref="category/apex/security.xml/ApexDangerousMethods"
    message="Calling potentially dangerous method"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/security.xml/ApexInsecureEndpoint"
    message="Apex callouts should use encrypted communication channels"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/security.xml/ApexOpenRedirect"
    message="Apex classes should safely redirect to a known location"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/security.xml/ApexSharingViolations"
    message="Apex classes should declare a sharing model if DML or SOQL is used"
  >
        <priority>1</priority>
    </rule>
    <rule
    ref="category/apex/security.xml/ApexSOQLInjection"
    message="Apex classes should escape variables merged in DML query"
  >
        <priority>1</priority>
    </rule>
    <rule
    ref="category/apex/security.xml/ApexSuggestUsingNamedCred"
    message="Consider using named credentials for authenticated callouts"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/apex/security.xml/ApexXSSFromEscapeFalse"
    message="Apex classes should escape addError strings"
  >
        <priority>1</priority>
    </rule>
    <rule
    ref="category/apex/security.xml/ApexXSSFromURLParam"
    message="Apex classes should escape Strings obtained from URL parameters"
  >
        <priority>1</priority>
    </rule>

    <!-- Visualforce Rules -->
    <rule
    ref="category/visualforce/security.xml/VfCsrf"
    message="Avoid calling VF action upon page load as the action becomes vulnerable to CSRF"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/visualforce/security.xml/VfUnescapeEl"
    message="Avoid unescaped user controlled content in EL as it results in XSS"
  >
        <priority>3</priority>
    </rule>
    <rule
    ref="category/visualforce/security.xml/VfHtmlStyleTagXss"
    message="Use URLENCODING or JSINHTMLENCODING in html tags to avoid XSS"
  >
        <priority>3</priority>
    </rule>

</ruleset>
